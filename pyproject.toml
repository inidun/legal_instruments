[tool.poetry]
name = "legal-instruments"
version = "0.1.0"
description = ""
authors = ["aibakeneko <aibakeneko@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
bs4 = "^0.0.1"
httpretty = "^1.1.4"
requests = "^2.31.0"
pandas = "^2.1.0"


[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pylint = "^2.17.5"
pytest = "^7.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py311"]
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.mypy_cache
  | deprecated
)
'''

[tool.isort]
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = [ "legal_instruments", "tests" ]

[tool.mypy]
python_version = "3.11"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
show_column_numbers = true
pretty = true

[[tool.mypy.overrides]]
module = 'tests.*'
disallow_untyped_defs = false

[tool.pylint.main]
exit-zero = true
ignore-paths = "deprecated"
jobs = 0
py-version = "3.11"

[tool.pylint.design]
max-args = 8
max-attributes = 14

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.BaseException", "builtins.Exception"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = 120

[tool.pylint."messages control"]
disable = [
    "invalid-name",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "pointless-string-statement",
    "global-statement",
    "c-extension-no-member",
    "too-few-public-methods",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "consider-using-enumerate",
    "unnecessary-comprehension",
    "too-many-branches",
    "too-many-locals",
    "wrong-import-order",
    "wrong-spelling-in-comment",
    "wrong-spelling-in-docstring"
]

[tool.pylint.miscellaneous]
notes = ""

[tool.pylint.refactoring]
never-returning-functions = ["sys.exit", "argparse.parse_error"]

[tool.pylint.reports]
output-format = "colorized"
score = false

[tool.pytest.ini_options]
log_cli = "False"
testpaths = [
    "tests",
]
python_files = "*_test.py"
python_functions = "test_*"
